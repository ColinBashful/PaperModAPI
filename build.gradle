plugins {
    id 'java'
    id("io.papermc.paperweight.userdev") version "${paperweight_version}"
    id("xyz.jpenilla.run-paper") version "2.3.1"
    // id 'com.gradleup.shadow' version '9.0.0-beta4'
}

group = 'de.cjdev'
version = project.version

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    /*maven {
        name = 'spongepowered-repo'
        url = 'https://repo.spongepowered.org/repository/maven-public/'
    }*/
    maven { url = uri("https://repo.codemc.io/repository/maven-releases/") }
    maven { url = uri("https://repo.codemc.io/repository/maven-snapshots/") }
}

/* Note for future me:
*
* - Upgrade gradle (first!!!!) e.g. "./gradlew wrapper --gradle-version latest"
* - Update paperweight and papermc after that
*   â†³ e.g. paperweight version "2.0.0-beta.11"
*
*/

dependencies {
    paperweight.paperDevBundle("${minecraft_version}-R0.1-SNAPSHOT")
    compileOnly("io.papermc.paper:paper-api:${minecraft_version}-R0.1-SNAPSHOT")
    //annotationProcessor('org.spongepowered.mixin:0.8.0')
    //implementation('net.minecrell:MixinBootstrap:1.1.0')
    compileOnly("com.github.retrooper:packetevents-spigot:${packetevents_version}")
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

tasks.named("runServer") {
    jvmArgs += [
            '--add-opens', 'java.base/java.lang.reflect=ALL-UNNAMED' // ain't actually needed :thumbs_up:
    ]
}

jar {
    destinationDirectory.set(file("C:/Minecraft Servers/Paper Plugin Test Server/plugins"))
    archiveFileName = "${getArchiveBaseName().get()}-${getArchiveVersion().get()}+${minecraft_version}.${getArchiveExtension().get()}"
}

//shadowJar {
//    destinationDirectory.set(file("C:/Minecraft Servers/Paper Plugin Test Server/plugins"))
//    archiveFileName = "${getArchiveBaseName().get()}-${getArchiveVersion().get()}+${minecraft_version}.${getArchiveExtension().get()}"
//}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('paper-plugin.yml') {
        expand props
    }
}
